syntax = "proto3";
package payment;
option go_package="github.com/hoangphuc28/CoursesOnline/Proto/payment";
import "Error/error.proto";

service PaymentService{
  rpc CheckOutWithPaypal(CheckoutRequest) returns(CheckoutResponse);
  rpc CaptureWithPaypal(CaptureRequest) returns(CaptureResponse);
  rpc ConnectPaypalAccount(ConnectPaypalRequest) returns(ConnectPaypalResponse);
  rpc GetPayment(GetPaymentRequest) returns(GetPaymentResponse);
  rpc GetPaypal(GetPayalRequest) returns(GetPayalResponse);
  rpc Refund(RefundRequest) returns(RefundResponse);

}

message RefundResponse {
  err.ErrorResponse error = 1;
}
message RefundRequest {
  string userId = 1;
  string paymentId = 2;
}
message CheckoutRequest {
  string userId = 1;
  string cartId = 2;
  PaymentMethod paymentMethod = 3;
}

message CheckoutResponse {
  Links links = 1;
  Token orderToken = 2;
  err.ErrorResponse error = 3;
}

message Links {
  string href = 1;
  string method = 2;
  string rel = 3;
}
message Token {
  string token = 1;
  string expire = 2;
}
enum PaymentMethod {
  PayPal = 0;
  ShopeePay = 1;
  Momo = 2;
}
message CaptureRequest {
  string orderId = 1;
  string token = 2;
}
message CaptureResponse {
  err.ErrorResponse error = 1;
}
message ConnectPaypalRequest {
  Token identifyToken = 1;
  string userId = 2;
}
message ConnectPaypalResponse {
  string email = 1;
  err.ErrorResponse error = 2;
}

message GetPaymentRequest {
  string userId = 1;
}
message ListItemPayment {
  string title = 1;
  string price = 2;
  string discount = 3;
  string amount = 4;
}
message Payment {
  string paymentId = 1;
  string paymentDate = 2;
  string total = 3;
  repeated ListItemPayment listItem = 4;
  string currency = 5;
  string refundStatus = 6;
}
message GetPaymentResponse {
  repeated Payment payment =1;
  err.ErrorResponse error = 2;
}
message GetPayalRequest {
  string userId = 1;
}
message GetPayalResponse {
  string email = 1;
  err.ErrorResponse error = 2;
}